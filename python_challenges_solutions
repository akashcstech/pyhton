Challenge 1 -solution
def separator():
        letter_list = []
        number_list = []
        other_list = []
        for x in txt:
                if x.isalpha():
                        letter_list.append(x)
                elif x.isdigit(): 
                        number_list.append(x)
                else:
                        other_list.append(x)
                
        print(letter_list)
        print(number_list)
        print(other_list)
          

txt = input()
output = separator()
print(output)
******************************************************************************************************************************************************

Challenge 2 - solution
#oriinal list
mylist = [5, 2, 9, 1, 5, 6, 9, 3, 2]
unique_list = []

#to- remove duplicates (3 ways)
# using list constructor and set() (begineer)
"""unique_list = list(set(mylist))
print(unique_list)
"""
#or-(for loop and if condition) & (keeps original order) (begineer)
"""for x in mylist:
    if x not in unique_list:
        unique_list.append(x)

print(unique_list)"""

#or -using (dict) (best)
unique_list = list(dict.fromkeys(mylist))
print(unique_list)
 
#to sort it (if we use the set() it gets sorted)
"""unique_list_sort = list(set(unique_list))
print(unique_list_sort)
"""
#or use the list sort()- to sort in its place
"""unique_list.sort() #assing not allowed
print(unique_list)
"""
#or use the sorted() - to sort and assign to new var
unique_list_sorted = sorted(unique_list) # assigning allowed
print(unique_list_sorted)

#second smallest and sec largest 
# we kn after sort the sec -s and -l (index) will be [1] and [-1]
#simply printing index
print(unique_list_sorted[1])
print(unique_list_sorted[-2])

****************************************************************************************************************************************
Challenge_3 - solution
#Note: union, intersection, difference oly works with sets !

#SET VALUES FROM INPUT USERS
SET_A = input("SET A: ") #strings Form
SET_B = input("SET B: ")

#For union of SET A AND SET B
# 1. convert string to sets, buz union oly works on sets
# 2. splite the input based on "," (commas) 
# 3. USE Union() or | - on SET A ANF SET B 
SET_A = set(SET_A.split(","))
SET_B = set(SET_B.split(","))
"""union = SET_A.union(SET_B) #Beginner"""
#or 
union = SET_A | SET_B # Best

print(union)

#For intersection
"""intersection = SET_A.intersection(SET_B) #Beginner"""
#or 
intersection = SET_A & SET_B
print(intersection)

#For difference
"""diff = SET_A.difference(SET_B) #Beginner"""
#or
diff = SET_A - SET_B #Best
print(diff)

***************************************************************************************************************************************
Challenge_4 - solution
#Vowels counter
# taking input str
word = input("Enter any word:")

#count the number of Vowels using for loop and if condition
check = ['a','e','i','o','u']
count = 0
for item in word:
    if item in check:
        count = count + 1
        
#print count
print("Number of Vowels is :",count)

************************************************************************************************************************************
Challenge_5 - solution
#Note: there is no direact avg function like sum, min, max 
# use sum / total num of items 
#Given List
mylist = [10, 20, 30, 40, 50]

# Finf Sum, min, max, Average #best
Sum = sum(mylist)
min = min(mylist)
max = max(mylist)
avg = sum(mylist) / len(mylist)

print(f"sum:{Sum}, min:{min},max:{max},avg:{avg}")

#Bonus: if list is empty, to avoid the div by 0 !
# use a if conditon

#other way by using import func - statistics #good !
"""import statistics

avg = statistics.mean(mylist)
print(avg)
"""
***********************************************************************************************************************************
Challenge_6 - solution
#given list to swap
mylist = [1, 2, 3, 4]

# to swap first and last items 
#using temp var #Begineer
"""temp = mylist[0]
mylist[0] = mylist[-1]
mylist[-1] = temp

print(mylist)"""

# using swap easy pytonic way (it is something oly python allows)
mylist[0], mylist[-1] = mylist[-1], mylist[0] # simple and Best

print(mylist)
*************************************************************************************************************************************
Challenge_7 - solution
#Note: Refer Challenge 2 , then this !

#Taking user input
value = (input("enter number (separated by commas):"))

#Since input()-funtion, oly grabs str ! we need to convert into int and also separate by ","
value = [int(x) for x in value.split(",")] # best way convert to intput val to int !
"""
#remove duplicate 
unique_val = list(set(value)) # beginner

"""
#or using dict to unique_val
unique_val = list(dict.fromkeys(value)) # Best way to get unique val


#by using set it order automatically
unique_val = sorted(unique_val) # beginner

# jst print the unique sorted value
print(unique_val)




